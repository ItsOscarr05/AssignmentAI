name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  VITE_API_URL: ${{ vars.VITE_API_URL }}
  VITE_AUTH_TOKEN_KEY: ${{ secrets.VITE_AUTH_TOKEN_KEY }}
  VITE_REFRESH_TOKEN_KEY: ${{ secrets.VITE_REFRESH_TOKEN_KEY }}
  VITE_ENABLE_2FA: ${{ vars.VITE_ENABLE_2FA }}
  VITE_ENABLE_FILE_UPLOAD: ${{ vars.VITE_ENABLE_FILE_UPLOAD }}
  VITE_MAX_FILE_SIZE: ${{ vars.VITE_MAX_FILE_SIZE }}
  VITE_SENTRY_DSN: ${{ secrets.VITE_SENTRY_DSN }}
  VITE_GA_TRACKING_ID: ${{ secrets.VITE_GA_TRACKING_ID }}
  VITE_STAGING_URL: ${{ vars.VITE_STAGING_URL }}
  VITE_PRODUCTION_URL: ${{ vars.VITE_PRODUCTION_URL }}
  VITE_STORAGE_BUCKET: ${{ vars.VITE_STORAGE_BUCKET }}
  VITE_CDN_URL: ${{ vars.VITE_CDN_URL }}
  VITE_CSRF_TOKEN_KEY: ${{ secrets.VITE_CSRF_TOKEN_KEY }}
  VITE_RATE_LIMIT_WINDOW: ${{ vars.VITE_RATE_LIMIT_WINDOW }}
  VITE_MAX_REQUESTS_PER_WINDOW: ${{ vars.VITE_MAX_REQUESTS_PER_WINDOW }}

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run TypeScript Check
        run: npm run type-check

      - name: Run Linting
        run: npm run lint

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run E2E Tests
        run: npm run test:e2e

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Run OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: ${{ vars.VITE_STAGING_URL }}

      - name: Run Dependency Check
        run: npm audit

      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: zap-report.html

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist/

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Deploy to Staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Add your staging deployment commands here
          echo "Deploying to staging..."

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Deploy to Production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Add your production deployment commands here
          echo "Deploying to production..."
