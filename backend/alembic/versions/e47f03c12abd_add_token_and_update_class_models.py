"""add_token_and_update_class_models

Revision ID: e47f03c12abd
Revises: 006677cb9e4f
Create Date: 2025-04-07 17:25:02.965480

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e47f03c12abd'
down_revision = '006677cb9e4f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_submission_assignment', table_name='submissions')
    op.drop_index('idx_submission_date', table_name='submissions')
    op.drop_index('idx_submission_student', table_name='submissions')
    op.drop_index('ix_submissions_id', table_name='submissions')
    op.drop_table('submissions')
    op.drop_index('idx_class_members', table_name='class_members')
    op.drop_table('class_members')
    op.drop_index('idx_class_name', table_name='classes')
    op.drop_index('idx_class_teacher', table_name='classes')
    op.drop_index('ix_classes_id', table_name='classes')
    op.drop_table('classes')
    op.drop_index('idx_user_role_active', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_assignment_class', table_name='assignments')
    op.drop_index('idx_assignment_due_date', table_name='assignments')
    op.drop_index('idx_assignment_status', table_name='assignments')
    op.drop_index('idx_assignment_teacher', table_name='assignments')
    op.drop_index('ix_assignments_id', table_name='assignments')
    op.drop_table('assignments')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assignments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('assignments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('max_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('DRAFT', 'PUBLISHED', 'CLOSED', name='assignmentstatus'), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name='assignments_class_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='assignments_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assignments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_assignments_id', 'assignments', ['id'], unique=False)
    op.create_index('idx_assignment_teacher', 'assignments', ['teacher_id'], unique=False)
    op.create_index('idx_assignment_status', 'assignments', ['status'], unique=False)
    op.create_index('idx_assignment_due_date', 'assignments', ['due_date'], unique=False)
    op.create_index('idx_assignment_class', 'assignments', ['class_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('STUDENT', 'TEACHER', 'ADMIN', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_role_active', 'users', ['role', 'is_active'], unique=False)
    op.create_table('classes',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('classes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='classes_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='classes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_classes_id', 'classes', ['id'], unique=False)
    op.create_index('idx_class_teacher', 'classes', ['teacher_id'], unique=False)
    op.create_index('idx_class_name', 'classes', ['name'], unique=False)
    op.create_table('class_members',
    sa.Column('class_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], name='class_members_class_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='class_members_user_id_fkey')
    )
    op.create_index('idx_class_members', 'class_members', ['class_id', 'user_id'], unique=False)
    op.create_table('submissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('submission_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('assignment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], name='submissions_assignment_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='submissions_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='submissions_pkey')
    )
    op.create_index('ix_submissions_id', 'submissions', ['id'], unique=False)
    op.create_index('idx_submission_student', 'submissions', ['student_id'], unique=False)
    op.create_index('idx_submission_date', 'submissions', ['submitted_at'], unique=False)
    op.create_index('idx_submission_assignment', 'submissions', ['assignment_id'], unique=False)
    # ### end Alembic commands ###
