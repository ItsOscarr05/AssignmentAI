"""Initial migration with users table (unified Base)

Revision ID: ee821189a449
Revises: 
Create Date: 2025-08-13 21:22:34.153842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ee821189a449'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('activity_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activities_id'), 'activities', ['id'], unique=False)
    op.create_table('ai_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('ai_model_used', sa.String(length=100), nullable=False),
    sa.Column('generation_prompt', sa.Text(), nullable=False),
    sa.Column('generated_content', sa.Text(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('generation_metadata', sa.JSON(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ai_assignment_assignment', 'ai_assignments', ['assignment_id'], unique=False)
    op.create_index('idx_ai_assignment_created', 'ai_assignments', ['created_at'], unique=False)
    op.create_index('idx_ai_assignment_model', 'ai_assignments', ['ai_model_used'], unique=False)
    op.create_index(op.f('ix_ai_assignments_id'), 'ai_assignments', ['id'], unique=False)
    op.create_table('assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=False),
    sa.Column('grade_level', sa.String(length=50), nullable=False),
    sa.Column('assignment_type', sa.String(length=50), nullable=False),
    sa.Column('topic', sa.String(length=255), nullable=False),
    sa.Column('difficulty', sa.Enum('EASY', 'MEDIUM', 'HARD', name='difficultylevel'), nullable=False),
    sa.Column('estimated_time', sa.Integer(), nullable=False),
    sa.Column('additional_requirements', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('max_score', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='assignmentstatus'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('attachments', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_assignment_class', 'assignments', ['class_id'], unique=False)
    op.create_index('idx_assignment_due_date', 'assignments', ['due_date'], unique=False)
    op.create_index('idx_assignment_status', 'assignments', ['status'], unique=False)
    op.create_index('idx_assignment_teacher', 'assignments', ['teacher_id'], unique=False)
    op.create_index(op.f('ix_assignments_id'), 'assignments', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('resource_type', sa.String(), nullable=True),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('citations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('authors', sa.String(length=500), nullable=True),
    sa.Column('publication_year', sa.Integer(), nullable=True),
    sa.Column('journal', sa.String(length=255), nullable=True),
    sa.Column('volume', sa.String(length=50), nullable=True),
    sa.Column('issue', sa.String(length=50), nullable=True),
    sa.Column('pages', sa.String(length=100), nullable=True),
    sa.Column('doi', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('citation_type', sa.String(length=50), nullable=False),
    sa.Column('citation_style', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('citation_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_citations_id'), 'citations', ['id'], unique=False)
    op.create_table('class_members',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('class_id', 'student_id')
    )
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classes_code'), 'classes', ['code'], unique=True)
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('file_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_files_id'), 'files', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', sa.String(length=50), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('notification_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('font_size', sa.String(length=20), nullable=True),
    sa.Column('compact_mode', sa.Boolean(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('notification_types', sa.JSON(), nullable=True),
    sa.Column('show_profile', sa.Boolean(), nullable=True),
    sa.Column('show_progress', sa.Boolean(), nullable=True),
    sa.Column('show_activity', sa.Boolean(), nullable=True),
    sa.Column('high_contrast', sa.Boolean(), nullable=True),
    sa.Column('reduced_motion', sa.Boolean(), nullable=True),
    sa.Column('screen_reader', sa.Boolean(), nullable=True),
    sa.Column('custom_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_preferences_id'), 'preferences', ['id'], unique=False)
    op.create_index(op.f('ix_preferences_user_id'), 'preferences', ['user_id'], unique=False)
    op.create_table('security_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('alert_metadata', sa.JSON(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('resolution_notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_security_alerts_alert_type'), 'security_alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_security_alerts_id'), 'security_alerts', ['id'], unique=False)
    op.create_table('submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('SUBMITTED', 'LATE', 'GRADED', 'RETURNED', name='submissionstatus'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('submission_metadata', sa.JSON(), nullable=True),
    sa.Column('attachments', sa.Text(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('graded_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_submission_assignment', 'submissions', ['assignment_id'], unique=False)
    op.create_index('idx_submission_date', 'submissions', ['submitted_at'], unique=False)
    op.create_index('idx_submission_student', 'submissions', ['user_id'], unique=False)
    op.create_index(op.f('ix_submissions_id'), 'submissions', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=False),
    sa.Column('plan_name', sa.String(length=100), nullable=False),
    sa.Column('plan_price', sa.Float(), nullable=False),
    sa.Column('plan_id', sa.String(length=100), nullable=True),
    sa.Column('ai_model', sa.String(length=100), nullable=True),
    sa.Column('token_limit', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'CANCELING', 'CANCELED', 'PAST_DUE', 'UNPAID', name='subscriptionstatus'), nullable=False),
    sa.Column('current_period_start', sa.DateTime(), nullable=False),
    sa.Column('current_period_end', sa.DateTime(), nullable=False),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('subscription_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_table('templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('template_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_templates_id'), 'templates', ['id'], unique=False)
    op.create_table('two_factor_setups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('secret_key', sa.String(), nullable=True),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('backup_codes', sa.JSON(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_two_factor_setups_id'), 'two_factor_setups', ['id'], unique=False)
    op.create_table('usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('requests_made', sa.Integer(), nullable=True),
    sa.Column('usage_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_id'), 'usage', ['id'], unique=False)
    op.create_table('usage_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.String(), nullable=False),
    sa.Column('feature', sa.String(), nullable=False),
    sa.Column('limit_type', sa.String(), nullable=False),
    sa.Column('limit_value', sa.Integer(), nullable=False),
    sa.Column('limit_metadata', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usage_limits_id'), 'usage_limits', ['id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('invalidated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('two_factor_secret', sa.String(), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('backup_codes', sa.JSON(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('account_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_history', sa.JSON(), nullable=True),
    sa.Column('sessions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('oauth_provider', sa.String(), nullable=True),
    sa.Column('oauth_access_token', sa.String(), nullable=True),
    sa.Column('oauth_refresh_token', sa.String(), nullable=True),
    sa.Column('oauth_token_expires_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_active', 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_stripe_customer_id'), 'users', ['stripe_customer_id'], unique=True)
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('feedback_metadata', sa.JSON(), nullable=True),
    sa.Column('is_ai_generated', sa.Boolean(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_feedback_created', 'feedback', ['created_at'], unique=False)
    op.create_index('idx_feedback_submission', 'feedback', ['submission_id'], unique=False)
    op.create_index('idx_feedback_type', 'feedback', ['feedback_type'], unique=False)
    op.create_index(op.f('ix_feedback_id'), 'feedback', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_feedback_id'), table_name='feedback')
    op.drop_index('idx_feedback_type', table_name='feedback')
    op.drop_index('idx_feedback_submission', table_name='feedback')
    op.drop_index('idx_feedback_created', table_name='feedback')
    op.drop_table('feedback')
    op.drop_index(op.f('ix_users_stripe_customer_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_active', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_usage_limits_id'), table_name='usage_limits')
    op.drop_table('usage_limits')
    op.drop_index(op.f('ix_usage_id'), table_name='usage')
    op.drop_table('usage')
    op.drop_index(op.f('ix_two_factor_setups_id'), table_name='two_factor_setups')
    op.drop_table('two_factor_setups')
    op.drop_index(op.f('ix_templates_id'), table_name='templates')
    op.drop_table('templates')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_submissions_id'), table_name='submissions')
    op.drop_index('idx_submission_student', table_name='submissions')
    op.drop_index('idx_submission_date', table_name='submissions')
    op.drop_index('idx_submission_assignment', table_name='submissions')
    op.drop_table('submissions')
    op.drop_index(op.f('ix_security_alerts_id'), table_name='security_alerts')
    op.drop_index(op.f('ix_security_alerts_alert_type'), table_name='security_alerts')
    op.drop_table('security_alerts')
    op.drop_index(op.f('ix_preferences_user_id'), table_name='preferences')
    op.drop_index(op.f('ix_preferences_id'), table_name='preferences')
    op.drop_table('preferences')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_files_id'), table_name='files')
    op.drop_table('files')
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.drop_index(op.f('ix_classes_code'), table_name='classes')
    op.drop_table('classes')
    op.drop_table('class_members')
    op.drop_index(op.f('ix_citations_id'), table_name='citations')
    op.drop_table('citations')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_assignments_id'), table_name='assignments')
    op.drop_index('idx_assignment_teacher', table_name='assignments')
    op.drop_index('idx_assignment_status', table_name='assignments')
    op.drop_index('idx_assignment_due_date', table_name='assignments')
    op.drop_index('idx_assignment_class', table_name='assignments')
    op.drop_table('assignments')
    op.drop_index(op.f('ix_ai_assignments_id'), table_name='ai_assignments')
    op.drop_index('idx_ai_assignment_model', table_name='ai_assignments')
    op.drop_index('idx_ai_assignment_created', table_name='ai_assignments')
    op.drop_index('idx_ai_assignment_assignment', table_name='ai_assignments')
    op.drop_table('ai_assignments')
    op.drop_index(op.f('ix_activities_id'), table_name='activities')
    op.drop_table('activities')
    # ### end Alembic commands ###
